async function handleExportAllOrgs() {
  // 1) Get *all* org names so every sheet exists (even if no rows)
  const lookups = await fetchAttributeFilterLookups({
    functionIds: [], categoryIds: [], subcatIds: [], ownerNames: [], custodianNames: []
  });
  const orgs = (lookups.orgs || []).map(o => ({ orgID: o.orgID, orgName: o.orgName }));

  // 2) Get the full feed for current filters EXCEPT don't narrow by subcategory
  //    (so the export includes all subcats for all orgs under current filters)
  const feed = await fetchAttributeFeed({
    // keep Function/Category/Owner/Custodian/Maturity/FinalOnly/Search filters the user set:
    functionIds: filters.functionIds,
    categoryIds: filters.categoryIds,
    subcatIds:   [], // IMPORTANT: no subcat filter in export
    ownerNames:  filters.ownerNames,
    custodianNames: filters.custodianNames,
    maturity:    filters.maturity,
    finalOnly:   filters.finalOnly,
    search:      filters.search
  });

  // 3) Build and save the workbook
  const wb = await buildAttributeWorkbook({
    headers: feed.headers || [],
    rows:    feed.rows    || [],
    orgs, // ensures a sheet is created for every org name regardless of data
  });

  await saveWorkbook(wb, 'csf-attribute-mapping.xlsx');
}
