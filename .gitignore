// Generic Excel helpers for the whole app
import ExcelJS from 'exceljs';

/** Create a workbook with sane defaults */
export function createWorkbook() {
  const wb = new ExcelJS.Workbook();
  wb.creator = 'Your Portal';
  wb.created = new Date();
  return wb;
}

/** Auto-fit columns by header/values */
export function autoFitColumns(ws) {
  ws.columns?.forEach((col) => {
    let max = (col.header?.toString()?.length || 10) + 2;
    col.eachCell?.({ includeEmpty: true }, (cell) => {
      const v = (cell.value?.richText
        ? cell.value.richText.map(t => t.text).join('')
        : (cell.value?.text ?? cell.value)) ?? '';
      max = Math.max(max, String(v).length + 2);
    });
    col.width = Math.min(Math.max(max, 10), 80);
  });
}

/** Save a workbook to the browser as a file */
export async function saveWorkbook(wb, filename = 'export.xlsx') {
  const buf = await wb.xlsx.writeBuffer();
  const blob = new Blob([buf], {
    type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
  });
  const url = URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.style.display = 'none';
  a.href = url;
  a.download = filename;
  document.body.appendChild(a);
  a.click();
  URL.revokeObjectURL(url);
  a.remove();
}
