IF OBJECT_ID('dbo.UI_CsfAttributeFeed','U') IS NOT NULL
  DROP TABLE dbo.UI_CsfAttributeFeed;
GO

CREATE TABLE dbo.UI_CsfAttributeFeed
(
  /* 1) Org context */
  OrgID                     INT           NOT NULL,
  OrgName                   NVARCHAR(20)  NOT NULL,   -- e.g., "FSI"

  /* 2) CSF 2.0 Function */
  FunctionID                INT           NOT NULL,
  FunctionName              NVARCHAR(100) NOT NULL,   -- "Identity (ID)"
  FunctionLanguage          NVARCHAR(500) NULL,       -- function description

  /* 3) CSF 2.0 Category */
  CategoryID                INT           NOT NULL,
  CategoryName              NVARCHAR(200) NOT NULL,   -- "Asset Management (ID.AM)"
  CategoryLanguage          NVARCHAR(500) NULL,       -- category description

  /* 4) CSF 2.0 Subcategory */
  CSF2SubcategoryID         INT           NOT NULL,
  CSF2SubcategoryName       NVARCHAR(200) NOT NULL,   -- "ID.AM-01"
  CSF2SubcategoryLanguage   NVARCHAR(500) NULL,       -- subcategory description
  ChangeSummary             NVARCHAR(500) NULL,       -- 1.1 → 2.0 change summary
  ImplementationExamples    NVARCHAR(500) NULL,       -- NIST examples

  /* 5) Associated CSF 1.1 Subcategory (for display) */
  CSF1SubcategoryID         INT           NULL,
  CSF1SubcategoryName       NVARCHAR(200) NULL,       -- e.g., "ID.AM-1"
  CSF1SubcategoryLanguage   NVARCHAR(500) NULL,

  /* 6) Attribute-level data (baseline from CSF 1.1) */
  Ent_Subcat_Attr           NVARCHAR(100) NULL,       -- original CSF 1.1 key (hidden in UI)
  MaturityLevel             TINYINT       NOT NULL,   -- 3 or 4
  AttributeNum              INT           NOT NULL,   -- final or placeholder (10,20,…)
  AttributeDefinition       NVARCHAR(500) NULL,       -- baseline definition
  AssessScore2024           INT           NULL,       -- view-only

  /* 7) User selections for baseline attributes */
  SelectionStatus           VARCHAR(20)   NULL,       -- Keep / Remove / Partial
  SelectionAttestation      VARCHAR(20)   NULL,       -- Meet / DoesNotMeet / Partial(ly)

  /* 8) Org-added custom attributes (+ attestation) */
  CustomAttributeNum        INT           NULL,
  CustomAttributeDefinition NVARCHAR(500) NULL,
  CustomAttributeAttestation VARCHAR(20)  NULL,

  /* 9) Contacts (aggregated per Org × Subcat) */
  Owner                     NVARCHAR(200) NULL,       -- comma-separated names
  Custodian                 NVARCHAR(200) NULL,       -- comma-separated names

  /* 10) Persisted computed CSF 2.0 natural key (final identifier) */
  Ent_Subcat_Attr_CSF2 AS
  (
    'E=' + OrgName
    + '~S=' + CSF2SubcategoryName
    + '~ML=' + CAST(MaturityLevel AS NVARCHAR(3))
    + '~A=' + CAST(AttributeNum   AS NVARCHAR(5))
  ) PERSISTED,

  /* Primary Key (clustered) — one row per Org × Subcat × ML × Attribute */
  CONSTRAINT PK_UI_CsfAttributeFeed
    PRIMARY KEY CLUSTERED (OrgID, CSF2SubcategoryID, MaturityLevel, AttributeNum)
);
GO


---
/* Filter by Org quickly (redundant with PK prefix, but good for coverage in some plans) */
CREATE NONCLUSTERED INDEX IX_UI_ByOrg
  ON dbo.UI_CsfAttributeFeed (OrgID);

/* Drilldowns by Function/Category/Subcategory within an Org */
CREATE NONCLUSTERED INDEX IX_UI_ByFunction
  ON dbo.UI_CsfAttributeFeed (OrgID, FunctionID);

CREATE NONCLUSTERED INDEX IX_UI_ByCategory
  ON dbo.UI_CsfAttributeFeed (OrgID, CategoryID);

CREATE NONCLUSTERED INDEX IX_UI_BySubcategory
  ON dbo.UI_CsfAttributeFeed (OrgID, CSF2SubcategoryID);

/* Optional: lookups by the final natural key (deep-links/exports) */
CREATE NONCLUSTERED INDEX IX_UI_ByEntCsf2Key
  ON dbo.UI_CsfAttributeFeed (Ent_Subcat_Attr_CSF2);

/* Owner/Custodian filters:
   We’re storing comma-separated names for simplicity. CHARINDEX filters aren’t SARGable,
   but a narrow index still helps coverage & some plan shapes. Keep only if you actually filter on them. */
CREATE NONCLUSTERED INDEX IX_UI_ByOwner
  ON dbo.UI_CsfAttributeFeed (Owner);

CREATE NONCLUSTERED INDEX IX_UI_ByCustodian
  ON dbo.UI_CsfAttributeFeed (Custodian);
GO



-----


CREATE OR ALTER PROCEDURE dbo.sp_RefreshCsfFeed_Subcat
  @OrgID INT,
  @CSF2SubcategoryID INT
AS
BEGIN
  SET NOCOUNT ON;
  SET XACT_ABORT ON;

  BEGIN TRAN;

  /* Preload CSF2 hierarchy once for this subcategory */
  ;WITH Csf2 AS (
    SELECT
      sc.SubcategoryID       AS CSF2SubcategoryID,
      sc.SubcategoryName     AS CSF2SubcategoryName,
      sc.SubcategoryLanguage AS CSF2SubcategoryLanguage,
      sc.ChangeSummary,
      sc.ImplementationExample,
      c.CategoryID,
      c.CategoryName,
      c.CategoryLanguage,
      f.FunctionID,
      f.FunctionName,
      f.FunctionLanguage
    FROM ref.CSF2_Subcategory sc
    JOIN ref.CSF2_Category   c ON c.CategoryID = sc.CategoryID
    JOIN ref.CSF2_Function   f ON f.FunctionID = c.FunctionID
    WHERE sc.SubcategoryID = @CSF2SubcategoryID
  ),
  /* Aggregated contacts for this Org × Subcat (owner/custodian) */
  OC AS (
    SELECT
      Owner = STUFF((
          SELECT ',' + oc.ContactName
            FROM dbo.Org_SubcategoryContact oc
           WHERE oc.OrgID = @OrgID
             AND oc.CSF2SubcatID = @CSF2SubcategoryID
             AND oc.ContactRole = 'Owner'
           FOR XML PATH(''), TYPE).value('.','nvarchar(max)'),1,1,''),
      Custodian = STUFF((
          SELECT ',' + oc.ContactName
            FROM dbo.Org_SubcategoryContact oc
           WHERE oc.OrgID = @OrgID
             AND oc.CSF2SubcatID = @CSF2SubcategoryID
             AND oc.ContactRole = 'Custodian'
           FOR XML PATH(''), TYPE).value('.','nvarchar(max)'),1,1,'')
  ),
  /* Baseline (CSF 1.1) attributes mapped into this CSF2 subcategory */
  BaselineSrc AS (
    SELECT
      b.OrgID,
      o.OrgName,

      cf.FunctionID,  cf.FunctionName,  cf.FunctionLanguage,
      cf.CategoryID,  cf.CategoryName,  cf.CategoryLanguage,
      cf.CSF2SubcategoryID,
      cf.CSF2SubcategoryName,
      cf.CSF2SubcategoryLanguage,
      cf.ChangeSummary,
      cf.ImplementationExample  AS ImplementationExamples,

      m.CSF1SubcatID            AS CSF1SubcategoryID,
      s1.SubcategoryName        AS CSF1SubcategoryName,
      s1.SubcategoryLanguage    AS CSF1SubcategoryLanguage,

      b.Ent_Subcat_Attr,
      b.MaturityLevel,
      b.AttributeNum,
      b.Definition              AS AttributeDefinition,
      b.AssessScore2024,

      sel.Status                AS SelectionStatus,
      sel.Attestation2025       AS SelectionAttestation,

      CAST(NULL AS INT)         AS CustomAttributeNum,
      CAST(NULL AS NVARCHAR(500)) AS CustomAttributeDefinition,
      CAST(NULL AS VARCHAR(20)) AS CustomAttributeAttestation
    FROM stg.Org_CSF1_AttrBaseline b
    JOIN dbo.Org o                     ON o.OrgID = b.OrgID
    JOIN ref.CSF1_to_CSF2_SubcategoryMap m
                                      ON m.CSF1SubcatID = b.CSF1SubcatID
    JOIN Csf2 cf                      ON cf.CSF2SubcategoryID = m.CSF2SubcatID  -- restrict to this subcat
    JOIN ref.CSF1_Subcategory s1      ON s1.CSF1SubcatID = m.CSF1SubcatID
    LEFT JOIN dbo.Org_AttributeSelection sel
                                      ON sel.OrgID = b.OrgID
                                     AND sel.Ent_Subcat_Attr = b.Ent_Subcat_Attr
                                     AND sel.CSF2SubcatID = @CSF2SubcategoryID
    WHERE b.OrgID = @OrgID
  ),
  /* Org-added CSF2 attributes for this subcategory */
  CustomSrc AS (
    SELECT
      cust.OrgID,
      o.OrgName,

      cf.FunctionID,  cf.FunctionName,  cf.FunctionLanguage,
      cf.CategoryID,  cf.CategoryName,  cf.CategoryLanguage,
      cf.CSF2SubcategoryID,
      cf.CSF2SubcategoryName,
      cf.CSF2SubcategoryLanguage,
      cf.ChangeSummary,
      cf.ImplementationExample  AS ImplementationExamples,

      CAST(NULL AS INT)           AS CSF1SubcategoryID,
      CAST(NULL AS NVARCHAR(200)) AS CSF1SubcategoryName,
      CAST(NULL AS NVARCHAR(500)) AS CSF1SubcategoryLanguage,

      CAST(NULL AS NVARCHAR(100)) AS Ent_Subcat_Attr,
      cust.MaturityLevel,
      cust.AttributeNum,
      CAST(NULL AS NVARCHAR(500)) AS AttributeDefinition,
      CAST(NULL AS INT)           AS AssessScore2024,

      CAST(NULL AS VARCHAR(20))   AS SelectionStatus,
      CAST(NULL AS VARCHAR(20))   AS SelectionAttestation,

      cust.AttributeNum           AS CustomAttributeNum,
      cust.Definition             AS CustomAttributeDefinition,
      cust.Attestation2025        AS CustomAttributeAttestation
    FROM dbo.Org_CustomCsf2Attribute cust
    JOIN dbo.Org o           ON o.OrgID = cust.OrgID
    JOIN Csf2 cf             ON cf.CSF2SubcategoryID = cust.CSF2SubcatID
    WHERE cust.OrgID = @OrgID
      AND cust.CSF2SubcatID = @CSF2SubcategoryID
      -- If you later add IsApproved, uncomment:
      -- AND cust.IsApproved = 1
  ),
  SourceSet AS (
    SELECT * FROM BaselineSrc
    UNION ALL
    SELECT * FROM CustomSrc
  ),
  SourceWithContacts AS (
    SELECT s.*,
           oc.Owner, oc.Custodian
    FROM SourceSet s
    CROSS JOIN OC oc
  )

  MERGE dbo.UI_CsfAttributeFeed AS T
  USING SourceWithContacts AS S
     ON T.OrgID             = S.OrgID
    AND T.CSF2SubcategoryID = S.CSF2SubcategoryID
    AND T.MaturityLevel     = S.MaturityLevel
    AND T.AttributeNum      = S.AttributeNum

  WHEN MATCHED THEN
    UPDATE SET
      T.OrgName                   = S.OrgName,
      T.FunctionID                = S.FunctionID,
      T.FunctionName              = S.FunctionName,
      T.FunctionLanguage          = S.FunctionLanguage,
      T.CategoryID                = S.CategoryID,
      T.CategoryName              = S.CategoryName,
      T.CategoryLanguage          = S.CategoryLanguage,
      T.CSF2SubcategoryName       = S.CSF2SubcategoryName,
      T.CSF2SubcategoryLanguage   = S.CSF2SubcategoryLanguage,
      T.ChangeSummary             = S.ChangeSummary,
      T.ImplementationExamples    = S.ImplementationExamples,
      T.CSF1SubcategoryID         = S.CSF1SubcategoryID,
      T.CSF1SubcategoryName       = S.CSF1SubcategoryName,
      T.CSF1SubcategoryLanguage   = S.CSF1SubcategoryLanguage,
      T.Ent_Subcat_Attr           = S.Ent_Subcat_Attr,
      T.MaturityLevel             = S.MaturityLevel,
      T.AttributeNum              = S.AttributeNum,
      T.AttributeDefinition       = S.AttributeDefinition,
      T.AssessScore2024           = S.AssessScore2024,
      T.SelectionStatus           = S.SelectionStatus,
      T.SelectionAttestation      = S.SelectionAttestation,
      T.CustomAttributeNum        = S.CustomAttributeNum,
      T.CustomAttributeDefinition = S.CustomAttributeDefinition,
      T.CustomAttributeAttestation= S.CustomAttributeAttestation,
      T.Owner                     = S.Owner,
      T.Custodian                 = S.Custodian

  WHEN NOT MATCHED BY TARGET THEN
    INSERT (
      OrgID, OrgName,
      FunctionID, FunctionName, FunctionLanguage,
      CategoryID, CategoryName, CategoryLanguage,
      CSF2SubcategoryID, CSF2SubcategoryName, CSF2SubcategoryLanguage,
      ChangeSummary, ImplementationExamples,
      CSF1SubcategoryID, CSF1SubcategoryName, CSF1SubcategoryLanguage,
      Ent_Subcat_Attr, MaturityLevel, AttributeNum, AttributeDefinition, AssessScore2024,
      SelectionStatus, SelectionAttestation,
      CustomAttributeNum, CustomAttributeDefinition, CustomAttributeAttestation,
      Owner, Custodian
    )
    VALUES (
      S.OrgID, S.OrgName,
      S.FunctionID, S.FunctionName, S.FunctionLanguage,
      S.CategoryID, S.CategoryName, S.CategoryLanguage,
      S.CSF2SubcategoryID, S.CSF2SubcategoryName, S.CSF2SubcategoryLanguage,
      S.ChangeSummary, S.ImplementationExamples,
      S.CSF1SubcategoryID, S.CSF1SubcategoryName, S.CSF1SubcategoryLanguage,
      S.Ent_Subcat_Attr, S.MaturityLevel, S.AttributeNum, S.AttributeDefinition, S.AssessScore2024,
      S.SelectionStatus, S.SelectionAttestation,
      S.CustomAttributeNum, S.CustomAttributeDefinition, S.CustomAttributeAttestation,
      S.Owner, S.Custodian
    )

  WHEN NOT MATCHED BY SOURCE
       AND T.OrgID = @OrgID
       AND T.CSF2SubcategoryID = @CSF2SubcategoryID
  THEN DELETE;

  COMMIT;
END
GO



