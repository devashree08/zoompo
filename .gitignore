// src/features/attributeMapping/components/atoms/ExpandableText.jsx
import * as React from 'react';
import { Box, Typography, Link, Stack, IconButton, Tooltip } from '@mui/material';
import { OpenInNew } from '@mui/icons-material';

/**
 * Renders long text with CSS line-clamp. Provides "Show more / Show less"
 * and optional open-in-dialog / open-in-new-tab callbacks.
 */
export default function ExpandableText({
  text = '',
  maxLines = 5,
  sx,
  onOpenDialog,
  onOpenNewTab,
}) {
  const [expanded, setExpanded] = React.useState(false);
  if (!text) return <Typography variant="body2" color="text.secondary">â€”</Typography>;

  return (
    <Box sx={sx}>
      <Typography
        variant="body2"
        sx={{
          ...(expanded
            ? {}
            : {
                display: '-webkit-box',
                WebkitLineClamp: maxLines,
                WebkitBoxOrient: 'vertical',
                overflow: 'hidden',
              }),
        }}
      >
        {text}
      </Typography>

      <Stack direction="row" spacing={1} alignItems="center" sx={{ mt: 0.5 }}>
        <Link
          component="button"
          variant="body2"
          onClick={() => setExpanded(v => !v)}
          sx={{ textDecoration: 'none' }}
        >
          {expanded ? 'Show less' : 'Show more'}
        </Link>

        {onOpenDialog && (
          <Link
            component="button"
            variant="body2"
            onClick={onOpenDialog}
            sx={{ textDecoration: 'none' }}
          >
            Open dialog
          </Link>
        )}

        {onOpenNewTab && (
          <Tooltip title="Open in new tab">
            <IconButton size="small" onClick={onOpenNewTab}>
              <OpenInNew fontSize="inherit" />
            </IconButton>
          </Tooltip>
        )}
      </Stack>
    </Box>
  );
}
