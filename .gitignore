SET NOCOUNT ON;

--------------------------------------------------------------------------------
-- 0) Config: portal user performing the change
--------------------------------------------------------------------------------
DECLARE @UserID NVARCHAR(128) = N'alice@corp.test';
DECLARE @ML TINYINT = 3;  -- test maturity level (3 or 4)

--------------------------------------------------------------------------------
-- 1) Preconditions: required objects
--------------------------------------------------------------------------------
IF OBJECT_ID('dbo.Org_CustomCsf2Attribute','U') IS NULL
  RAISERROR('Missing table dbo.Org_CustomCsf2Attribute.',16,1);
IF OBJECT_ID('dbo.sp_SaveCustomAttribute','P') IS NULL
  RAISERROR('Missing proc dbo.sp_SaveCustomAttribute.',16,1);

-- No-op stub for refresh if you haven't created the real one yet
IF OBJECT_ID('dbo.sp_RefreshCsfFeed_Subcat','P') IS NULL
  EXEC('CREATE PROCEDURE dbo.sp_RefreshCsfFeed_Subcat @OrgID INT, @CSF2SubcategoryID INT AS BEGIN SET NOCOUNT ON; END');

--------------------------------------------------------------------------------
-- 2) Pick an existing Org and CSF2 Subcategory (READ-ONLY from ref/dbo)
--    If you want specific IDs, set @OrgID and @CSF2SubcategoryID manually.
--------------------------------------------------------------------------------
DECLARE @OrgID INT, @CSF2SubcategoryID INT;

-- Prefer an org that already has any CSF2 feed rows; else just TOP 1 org
SELECT TOP (1) @OrgID = OrgID FROM dbo.Org ORDER BY OrgID;

IF @OrgID IS NULL
BEGIN
  RAISERROR('No orgs found in dbo.Org. Seed Org table before running this test.',16,1);
  RETURN;
END

SELECT TOP (1) @CSF2SubcategoryID = SubcategoryID
FROM ref.CSF2_Subcategory
ORDER BY SubcategoryID;

IF @CSF2SubcategoryID IS NULL
BEGIN
  RAISERROR('No CSF2 subcategories found in ref.CSF2_Subcategory. Load refs before running this test.',16,1);
  RETURN;
END

PRINT CONCAT('== Using OrgID=', @OrgID, ' CSF2SubcategoryID=', @CSF2SubcategoryID, ' ML=', @ML);

--------------------------------------------------------------------------------
-- 3) Snapshot before
--------------------------------------------------------------------------------
PRINT '== BEFORE: existing custom attributes for this scope ==';
SELECT OrgID, CSF2SubcategoryID, MaturityLevel, AttributeNum, Definition, Attestation, IsActive, ModifiedAt
FROM dbo.Org_CustomCsf2Attribute
WHERE OrgID=@OrgID AND CSF2SubcategoryID=@CSF2SubcategoryID AND MaturityLevel=@ML
ORDER BY AttributeNum;

--------------------------------------------------------------------------------
-- 4) ADD a custom attribute (auto-numbered >= 15)
--------------------------------------------------------------------------------
DECLARE @NewAttrNum INT = NULL;

EXEC dbo.sp_SaveCustomAttribute
  @Action='ADD',
  @OrgID=@OrgID,
  @CSF2SubcategoryID=@CSF2SubcategoryID,
  @MaturityLevel=@ML,
  @AttributeNum=@NewAttrNum OUTPUT,
  @Definition=N'Quarterly reconciliation of asset inventory to CMDB.',
  @Attestation='Meet',
  @UserID=@UserID;

PRINT CONCAT('ADD assigned AttributeNum = ', CONVERT(VARCHAR(10), @NewAttrNum));

PRINT '== AFTER ADD ==';
SELECT OrgID, CSF2SubcategoryID, MaturityLevel, AttributeNum, Definition, Attestation, IsActive, ModifiedAt
FROM dbo.Org_CustomCsf2Attribute
WHERE OrgID=@OrgID AND CSF2SubcategoryID=@CSF2SubcategoryID AND MaturityLevel=@ML
ORDER BY AttributeNum;

--------------------------------------------------------------------------------
-- 5) UPDATE that attribute (change text + attestation)
--------------------------------------------------------------------------------
EXEC dbo.sp_SaveCustomAttribute
  @Action='UPDATE',
  @OrgID=@OrgID,
  @CSF2SubcategoryID=@CSF2SubcategoryID,
  @MaturityLevel=@ML,
  @AttributeNum=@NewAttrNum OUTPUT,
  @Definition=N'Quarterly reconciliation of asset inventory to authoritative CMDB.',
  @Attestation='Partial Meet',
  @UserID=@UserID;

PRINT '== AFTER UPDATE ==';
SELECT OrgID, CSF2SubcategoryID, MaturityLevel, AttributeNum, Definition, Attestation, IsActive, ModifiedAt
FROM dbo.Org_CustomCsf2Attribute
WHERE OrgID=@OrgID AND CSF2SubcategoryID=@CSF2SubcategoryID AND MaturityLevel=@ML
ORDER BY AttributeNum;

--------------------------------------------------------------------------------
-- 6) DELETE (soft) the attribute
--------------------------------------------------------------------------------
EXEC dbo.sp_SaveCustomAttribute
  @Action='DELETE',
  @OrgID=@OrgID,
  @CSF2SubcategoryID=@CSF2SubcategoryID,
  @MaturityLevel=@ML,
  @AttributeNum=@NewAttrNum OUTPUT,
  @UserID=@UserID;

PRINT '== AFTER SOFT DELETE ==';
SELECT OrgID, CSF2SubcategoryID, MaturityLevel, AttributeNum, Definition, Attestation, IsActive, ModifiedAt
FROM dbo.Org_CustomCsf2Attribute
WHERE OrgID=@OrgID AND CSF2SubcategoryID=@CSF2SubcategoryID AND MaturityLevel=@ML
ORDER BY AttributeNum;

--------------------------------------------------------------------------------
-- 7) ADD again to verify numbering is monotonic (should be previous MAX+1)
--------------------------------------------------------------------------------
DECLARE @AnotherAttrNum INT = NULL;

EXEC dbo.sp_SaveCustomAttribute
  @Action='ADD',
  @OrgID=@OrgID,
  @CSF2SubcategoryID=@CSF2SubcategoryID,
  @MaturityLevel=@ML,
  @AttributeNum=@AnotherAttrNum OUTPUT,
  @Definition=N'Monthly variance analysis between discovery tool and CMDB.',
  @Attestation='Does Not Meet',
  @UserID=@UserID;

PRINT CONCAT('Second ADD assigned AttributeNum = ', CONVERT(VARCHAR(10), @AnotherAttrNum));

PRINT '== AFTER SECOND ADD ==';
SELECT OrgID, CSF2SubcategoryID, MaturityLevel, AttributeNum, Definition, Attestation, IsActive, ModifiedAt
FROM dbo.Org_CustomCsf2Attribute
WHERE OrgID=@OrgID AND CSF2SubcategoryID=@CSF2SubcategoryID AND MaturityLevel=@ML
ORDER BY AttributeNum;

--------------------------------------------------------------------------------
-- 8) Audit trail (most recent first)
--------------------------------------------------------------------------------
PRINT '== AUDIT TOP 20 ==';
SELECT TOP (20) *
FROM dbo.Org_CustomCsf2Attribute_Audit
WHERE OrgID=@OrgID AND CSF2SubcategoryID=@CSF2SubcategoryID AND MaturityLevel=@ML
ORDER BY AuditID DESC;
