// ...imports and fetch logic unchanged

export default function AttributeFilterBar({ value, onChange, onExport }) {
  // ...state + useEffect unchanged (using orgID, functionID, categoryID, csF2SubcategoryID, fullName)

  const filtersLayout = (
    <Box
      sx={{
        display: 'grid',
        gridTemplateColumns: 'repeat(auto-fit, minmax(220px, 1fr))',
        gap: 12 / 8,  // 1.5 spacing units
        alignItems: 'center',
      }}
    >
      <MultiSelect label="Organizations" value={value.orgIds}
        onChange={(v) => onChange({ ...value, orgIds: v })}
        options={opts.orgs} />

      <MultiSelect label="Functions" value={value.functionIds}
        onChange={(v) => onChange({ ...value, functionIds: v })}
        options={opts.functions} />

      <MultiSelect label="Categories" value={value.categoryIds}
        onChange={(v) => onChange({ ...value, categoryIds: v })}
        options={opts.categories} />

      <MultiSelect label="Subcategories" value={value.subcatIds}
        onChange={(v) => onChange({ ...value, subcatIds: v })}
        options={opts.subcategories} />

      <MultiSelect label="Owners" value={value.ownerNames}
        onChange={(v) => onChange({ ...value, ownerNames: v })}
        options={opts.owners} />

      <MultiSelect label="Custodians" value={value.custodianNames}
        onChange={(v) => onChange({ ...value, custodianNames: v })}
        options={opts.custodians} />

      <MultiSelect label="Maturity" value={value.maturity}
        onChange={(v) => onChange({ ...value, maturity: v })}
        options={[{ value: 3, label: 'Level 3' }, { value: 4, label: 'Level 4' }]} />

      <Switch
        label="Final view (hide Removed)"
        checked={!!value.finalOnly}
        onChange={(checked) => onChange({ ...value, finalOnly: checked })}
      />
    </Box>
  );

  return (
    <FilterBar
      filtersLeft={filtersLayout}
      searchValue={value.search}
      onSearchChange={(s) => onChange({ ...value, search: s })}
      onExport={onExport}
      exportLabel="Export"
    />
  );
}
