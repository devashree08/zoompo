// Generic CSV builder (UTF-8 BOM for Excel), reusable across pages
function downloadBlob(text, filename) {
  const blob = new Blob(["\uFEFF" + text], { type: "text/csv;charset=utf-8;" });
  const url = URL.createObjectURL(blob);
  const a = document.createElement("a");
  a.href = url;
  a.download = filename || "export.csv";
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
  URL.revokeObjectURL(url);
}

function escapeCsv(val) {
  if (val === null || val === undefined) return "";
  const s = String(val);
  return /[",\n]/.test(s) ? `"${s.replace(/"/g, '""')}"` : s;
}

// Generic: export array of objects using a column spec
export function exportAsCsv(data, columns, filename = "export.csv") {
  const header = columns.map(c => escapeCsv(c.header)).join(",");
  const lines = (data || []).map(row =>
    columns.map(c => {
      const raw = typeof c.value === "function" ? c.value(row) : row[c.key];
      return escapeCsv(raw);
    }).join(",")
  );
  downloadBlob([header, ...lines].join("\n"), filename);
}

/**
 * Page-specific wrapper for Attribute Mapping rows.
 * Expects the feed "rows" (FeedRowDto[]).
 */
export function exportRowsAsCsv(rows, filename = "csf-attribute-rows.csv") {
  const cols = [
    { header: "Org",              key: "OrgName" },
    { header: "Function",         key: "FunctionName" },
    { header: "Category",         key: "CategoryName" },
    { header: "CSF 2.0 Subcat",   key: "CSF2SubcategoryName" },
    { header: "CSF 1.1 Subcat",   key: "CSF1SubcategoryName" },        // empty for customs
    { header: "Maturity",         key: "MaturityLevel" },
    { header: "Attribute #",      key: "AttributeNum" },               // canonical number in feed
    {
      header: "Definition",
      value: (r) => r.CustomAttributeDefinition ?? r.AttributeDefinition ?? ""
    },
    { header: "2024 Assess Score", key: "AssessScore2024" },
    { header: "Status",            key: "SelectionStatus" },           // Keep/Remove/null
    { header: "Attestation 2025",  key: "SelectionAttestation" },      // Meet/Partial/DoesNotMeet/null
    { header: "Owner(s)",          key: "Owner" },
    { header: "Custodian(s)",      key: "Custodian" }
  ];
  exportAsCsv(rows, cols, filename);
}
