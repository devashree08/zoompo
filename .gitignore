import * as React from 'react';
import { Card, CardContent, Grid, Chip, Typography, Stack } from '@mui/material';
import FunctionBadge from '../atoms/FunctionBadge';

export default function HeaderInfoPanel({ header, ownerCsv, custodianCsv }) {
  const owners = (ownerCsv || '').split(',').map(s => s.trim()).filter(Boolean);
  const custodians = (custodianCsv || '').split(',').map(s => s.trim()).filter(Boolean);

  return (
    <Card variant="outlined" sx={{ mb: 2, position:'sticky', top: 8, zIndex: 1 }}>
      <CardContent>
        <Grid container spacing={2}>
          <Grid item xs={12} md={8}>
            <Typography variant="overline" color="text.secondary">Function</Typography>
            <Stack direction="row" alignItems="center" spacing={1} sx={{ mb: 1 }}>
              <FunctionBadge functionName={header.functionName} />
              <Typography variant="h6">{header.functionName}</Typography>
            </Stack>
            <Typography variant="body2" color="text.secondary" sx={{ mb: 2 }}>
              {header.functionLanguage}
            </Typography>

            <Typography variant="overline" color="text.secondary">Category</Typography>
            <Typography variant="subtitle1" fontWeight={600}>{header.categoryName}</Typography>
            <Typography variant="body2" color="text.secondary" sx={{ mb: 2 }}>
              {header.categoryLanguage}
            </Typography>

            <Typography variant="overline" color="text.secondary">CSF 2.0 Subcategory</Typography>
            <Typography variant="subtitle1" fontWeight={600}>{header.csF2SubcategoryName}</Typography>
            <Typography variant="body2" color="text.secondary">{header.csF2SubcategoryLanguage}</Typography>
          </Grid>

          <Grid item xs={12} md={4}>
            <Typography variant="overline" color="text.secondary">Owner / Custodian</Typography>
            <Stack direction="row" spacing={1} useFlexGap flexWrap="wrap" sx={{ mb:1 }}>
              {owners.length ? owners.map(n => <Chip key={n} size="small" label={`Owner: ${n}`} />)
                             : <Typography variant="body2" color="text.secondary">—</Typography>}
            </Stack>
            <Stack direction="row" spacing={1} useFlexGap flexWrap="wrap">
              {custodians.length ? custodians.map(n => <Chip key={n} size="small" label={`Custodian: ${n}`} />)
                                 : <Typography variant="body2" color="text.secondary">—</Typography>}
            </Stack>
          </Grid>
        </Grid>
      </CardContent>
    </Card>
  );
}
