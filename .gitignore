// src/features/attributeMapping/components/atoms/ExpandableText.jsx
import * as React from 'react';
import { Box, Typography, Stack, Button } from '@mui/material';
import OpenInNewIcon from '@mui/icons-material/OpenInNew';

/**
 * Renders long text with CSS line-clamp. Provides "Show more / Show less"
 * and optional onOpenDialog (we use it to open a NEW TAB).
 *
 * Props:
 *  - text: string
 *  - maxLines: number (default 5)
 *  - sx: MUI sx for the outer Box
 *  - onOpenDialog?: () => void   // called when "Open dialog" is clicked
 */
export default function ExpandableText({
  text = '',
  maxLines = 5,
  sx,
  onOpenDialog,
}) {
  const [expanded, setExpanded] = React.useState(false);

  if (!text) {
    return <Typography variant="body2" color="text.secondary">â€”</Typography>;
  }

  return (
    <Box sx={sx}>
      <Typography
        variant="body2"
        sx={{
          ...(expanded
            ? {}
            : {
                display: '-webkit-box',
                WebkitLineClamp: maxLines,
                WebkitBoxOrient: 'vertical',
                overflow: 'hidden',
              }),
          whiteSpace: 'pre-wrap',
        }}
      >
        {text}
      </Typography>

      <Stack direction="row" spacing={1} alignItems="center" sx={{ mt: 0.75 }}>
        <Button
          size="small"
          color="primary"
          onClick={() => setExpanded(v => !v)}
        >
          {expanded ? 'Show less' : 'Show more'}
        </Button>

        {!!onOpenDialog && (
          <Button
            size="small"
            color="primary"
            endIcon={<OpenInNewIcon fontSize="small" />}
            onClick={onOpenDialog}
          >
            Open dialog
          </Button>
        )}
      </Stack>
    </Box>
  );
}
