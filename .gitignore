CREATE TABLE dbo.UI_CsfAttributeFeed
(
  -- Organizational context
  OrgID                  INT           NOT NULL,
  OrgCode                NVARCHAR(20)  NOT NULL,    -- same as OrgName

  -- CSF-2 hierarchy
  FunctionID             INT           NOT NULL,
  CSF2FunctionCode       NVARCHAR(20)  NOT NULL,
  CSF2FunctionTitle      NVARCHAR(100) NOT NULL,

  CategoryID             INT           NOT NULL,
  CSF2CategoryCode       NVARCHAR(20)  NOT NULL,
  CSF2CategoryTitle      NVARCHAR(100) NOT NULL,

  SubcategoryID          INT           NOT NULL,
  CSF2SubcatCode         NVARCHAR(20)  NOT NULL,
  CSF2SubcatTitle        NVARCHAR(200) NOT NULL,
  ChangeSummary          NVARCHAR(500) NULL,
  ImplementationExample  NVARCHAR(500) NULL,

  -- Attribute data
  MaturityLevel          TINYINT       NOT NULL,
  AttributeOrder         INT           NOT NULL,
  Ent_Subcat_Attr        NVARCHAR(100) NULL,    -- CSF-1 key
  BaselineDefinition     NVARCHAR(500) NULL,
  SelectionStatus        VARCHAR(20)   NULL,
  SelectionAttestation   VARCHAR(20)   NULL,
  CustomDefinition       NVARCHAR(500) NULL,
  CustomAttestation      VARCHAR(20)   NULL,
  AssessScore2024        INT           NULL,

  -- Contacts aggregated
  OwnerList              NVARCHAR(500) NULL,
  CustodianList          NVARCHAR(500) NULL,

  -- Computed CSF-2 key
  Ent_Subcat_Attr_CSF2   AS (
    'E=' + OrgCode
    + '~S=' + CSF2SubcatCode
    + '~ML=' + CAST(MaturityLevel  AS NVARCHAR(3))
    + '~A=' + CAST(AttributeOrder  AS NVARCHAR(5))
  ) PERSISTED,

  CONSTRAINT PK_UI_CsfAttributeFeed
    PRIMARY KEY CLUSTERED
    (OrgID, CSF2SubcatCode, MaturityLevel, AttributeOrder)
);



------------

CREATE PROCEDURE dbo.sp_RefreshCsfFeed
  @OrgID INT
AS
BEGIN
  SET NOCOUNT ON;

  MERGE dbo.UI_CsfAttributeFeed AS T
  USING
  (
    ---------------------------------------------------
    -- 1) Baseline attributes with selections & contacts
    SELECT
      b.OrgID,
      o.OrgName       AS OrgCode,

      f.FunctionID,
      f.Code          AS CSF2FunctionCode,
      f.Title         AS CSF2FunctionTitle,

      c.CategoryID,
      c.Code          AS CSF2CategoryCode,
      c.Title         AS CSF2CategoryTitle,

      sc.SubcategoryID,
      sc.Code         AS CSF2SubcatCode,
      sc.Title        AS CSF2SubcatTitle,
      sc.ChangeSummary,
      sc.ImplementationExample,

      b.MaturityLevel,
      b.AttributeNum    AS AttributeOrder,
      b.Ent_Subcat_Attr,
      b.Definition      AS BaselineDefinition,
      sel.Status        AS SelectionStatus,
      sel.Attestation2025 AS SelectionAttestation,
      NULL              AS CustomDefinition,
      NULL              AS CustomAttestation,
      b.AssessScore2024,

      -- Owners list
      OwnerList = STUFF((
        SELECT ','+oc.ContactName
          FROM dbo.Org_SubcategoryContact oc
         WHERE oc.OrgID        = b.OrgID
           AND oc.CSF2SubcatID = sc.SubcategoryID
           AND oc.ContactRole  = 'Owner'
         FOR XML PATH('')),1,1,''),

      -- Custodians list
      CustodianList = STUFF((
        SELECT ','+oc.ContactName
          FROM dbo.Org_SubcategoryContact oc
         WHERE oc.OrgID        = b.OrgID
           AND oc.CSF2SubcatID = sc.SubcategoryID
           AND oc.ContactRole  = 'Custodian'
         FOR XML PATH('')),1,1,'')
    FROM stg.Org_CSF1_AttrBaseline b
    JOIN dbo.Org o              ON o.OrgID    = b.OrgID
    JOIN ref.CSF1_to_CSF2_SubcategoryMap m 
      ON m.CSF1SubcatID = b.CSF1SubcatID
    JOIN ref.CSF2_Subcategory sc
      ON sc.SubcategoryID = m.CSF2SubcatID
    JOIN ref.CSF2_Category c 
      ON c.CategoryID = sc.CategoryID
    JOIN ref.CSF2_Function f 
      ON f.FunctionID = c.FunctionID
    LEFT JOIN dbo.Org_AttributeSelection sel
      ON sel.OrgID = b.OrgID
     AND sel.Ent_Subcat_Attr = b.Ent_Subcat_Attr
     AND sel.CSF2SubcatID = sc.SubcategoryID

    UNION ALL

    ---------------------------------------------------
    -- 2) Custom attributes with attestations & contacts
    SELECT
      cust.OrgID,
      o.OrgName       AS OrgCode,

      f.FunctionID,
      f.Code          AS CSF2FunctionCode,
      f.Title         AS CSF2FunctionTitle,

      c.CategoryID,
      c.Code          AS CSF2CategoryCode,
      c.Title         AS CSF2CategoryTitle,

      sc.SubcategoryID,
      sc.Code         AS CSF2SubcatCode,
      sc.Title        AS CSF2SubcatTitle,
      sc.ChangeSummary,
      sc.ImplementationExample,

      cust.MaturityLevel,
      cust.AttributeNum AS AttributeOrder,
      NULL             AS Ent_Subcat_Attr,
      NULL             AS BaselineDefinition,
      NULL             AS SelectionStatus,
      NULL             AS SelectionAttestation,
      cust.Definition  AS CustomDefinition,
      cust.Attestation2025 AS CustomAttestation,
      NULL             AS AssessScore2024,

      -- same Owner/Custodian aggregation
      OwnerList = STUFF((
        SELECT ','+oc.ContactName
          FROM dbo.Org_SubcategoryContact oc
         WHERE oc.OrgID        = cust.OrgID
           AND oc.CSF2SubcatID = sc.SubcategoryID
           AND oc.ContactRole  = 'Owner'
         FOR XML PATH('')),1,1,''),

      CustodianList = STUFF((
        SELECT ','+oc.ContactName
          FROM dbo.Org_SubcategoryContact oc
         WHERE oc.OrgID        = cust.OrgID
           AND oc.CSF2SubcatID = sc.SubcategoryID
           AND oc.ContactRole  = 'Custodian'
         FOR XML PATH('')),1,1,'')
    FROM dbo.Org_CustomCsf2Attribute cust
    JOIN dbo.Org o              ON o.OrgID    = cust.OrgID
    JOIN ref.CSF2_Subcategory sc
      ON sc.SubcategoryID = cust.CSF2SubcatID
    JOIN ref.CSF2_Category c 
      ON c.CategoryID = sc.CategoryID
    JOIN ref.CSF2_Function f 
      ON f.FunctionID = c.FunctionID
  ) AS S
  ON T.OrgID            = S.OrgID
 AND T.CSF2SubcatCode   = S.CSF2SubcatCode
 AND T.MaturityLevel    = S.MaturityLevel
 AND T.AttributeOrder   = S.AttributeOrder

  WHEN MATCHED THEN
    UPDATE SET
      OrgCode               = S.OrgCode,
      FunctionID            = S.FunctionID,
      CSF2FunctionCode      = S.CSF2FunctionCode,
      CSF2FunctionTitle     = S.CSF2FunctionTitle,
      CategoryID            = S.CategoryID,
      CSF2CategoryCode      = S.CSF2CategoryCode,
      CSF2CategoryTitle     = S.CSF2CategoryTitle,
      SubcategoryID         = S.SubcategoryID,
      CSF2SubcatTitle       = S.CSF2SubcatTitle,
      ChangeSummary         = S.ChangeSummary,
      ImplementationExample = S.ImplementationExample,
      BaselineDefinition    = S.BaselineDefinition,
      SelectionStatus       = S.SelectionStatus,
      SelectionAttestation  = S.SelectionAttestation,
      CustomDefinition      = S.CustomDefinition,
      CustomAttestation     = S.CustomAttestation,
      AssessScore2024       = S.AssessScore2024,
      OwnerList             = S.OwnerList,
      CustodianList         = S.CustodianList

  WHEN NOT MATCHED BY TARGET THEN
    INSERT (*)
    VALUES (S.*)

  WHEN NOT MATCHED BY SOURCE THEN
    DELETE;

END
GO



----------

-- clustered primary key already in place

-- support Org filter
CREATE NONCLUSTERED INDEX IX_UI_ByOrg
  ON dbo.UI_CsfAttributeFeed(OrgID);

-- support Function/Category/Subcategory filters
CREATE NONCLUSTERED INDEX IX_UI_ByFunction
  ON dbo.UI_CsfAttributeFeed(FunctionID, CSF2FunctionCode);
CREATE NONCLUSTERED INDEX IX_UI_ByCategory
  ON dbo.UI_CsfAttributeFeed(CategoryID, CSF2CategoryCode);
CREATE NONCLUSTERED INDEX IX_UI_BySubcategory
  ON dbo.UI_CsfAttributeFeed(SubcategoryID, CSF2SubcatCode);

-- support Owner/Custodian filters
CREATE NONCLUSTERED INDEX IX_UI_ByOwner
  ON dbo.UI_CsfAttributeFeed(OwnerList);
CREATE NONCLUSTERED INDEX IX_UI_ByCustodian
  ON dbo.UI_CsfAttributeFeed(CustodianList);


-------


